======================================
Test add_integer from 0-add_integer
======================================

>>> add_integer = __import__('0-add_integer').add_integer


>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(2)
100

>>> add_integer(100.3, -2)
98

>>> add_integer(100.3, 100.6)
200

>>> add_integer("holberton", 98)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(-2, -98)
-100

>>> add_integer([2], 3)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer({2}, 3)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(2, [3])
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(2, {3})
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(2, 3, 4)
Traceback (most recent call last):
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

>>> add_integer(2)
100

>>> add_integer(3)
101

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(None, 3)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(2, None)
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(123456789, 123456789)
246913578

>>> add_integer(123456789123456789, 123456789123456789)
246913578246913578
